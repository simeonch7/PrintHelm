Build1=Default,microinvest.SPA
File1=dictionary.xml
File10=SmartBG.jpg
File11=spinner_background.png
File2=edit.png
File3=print_item_failed_icon.png
File4=print_item_success_icon.png
File5=printer_1_icon.png
File6=printer_2_icon.png
File7=printer_3_icon.png
File8=printer_icon_pressed.png
File9=settingsIcon.png
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
IconFile=
Library1=core
Library10=network
Library11=byteconverter
Library12=micustomviews
Library13=javaobject
Library14=ahlocale
Library15=httpserver
Library16=stringutils
Library17=okhttputils2
Library18=runtimepermissions
Library2=xmlsax
Library3=randomaccessfile
Library4=reflection
Library5=customalertdialog
Library6=phone
Library7=usb
Library8=felusbserial
Library9=serial
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~~\n~AddPermission(android.hardware.usb.action.USB_DEVICE_DETACHED)~\n~CreateResource(xml, device_filter.xml,~\n~<resources>		~\n~    <usb-device />	~\n~</resources>~\n~)~\n~AddApplicationText(~\n~<activity android:name=".main" >~\n~   <intent-filter>~\n~    <action android:name="android.hardware.usb.action.USB_DEVICE_ATTACHED" />~\n~   </intent-filter>  ~\n~    <meta-data android:name="android.hardware.usb.action.USB_DEVICE_ATTACHED" android:resource="@xml/device_filter" />   ~\n~ </activity>~\n~)
Module1=UConfig
Module10=Translator
Module11=PrinterMain
Module12=ScriptMaster
Module13=Countries
Module14=B4XEval
Module15=ImageResources
Module16=ProgramData
Module17=PrinterStatusScreen
Module18=Version
Module19=UISizes
Module2=IPscreen
Module20=PrinterPriceCalculator
Module21=BytesBuilder
Module22=ButtonWithNotifications
Module23=PrinterStatusSVItems
Module24=SPAservice
Module25=Device
Module26=PriceMathFunctions
Module27=OperationFunctions
Module28=Constants
Module3=SettingsScreen
Module4=PrinterConstants
Module5=DataTypes
Module6=PrinterStatusSVItem
Module7=PrinterPOS
Module8=Utilities
Module9=HelperFunctions
NumberOfFiles=11
NumberOfLibraries=18
NumberOfModules=28
Version=8.8
@EndOfDesignText@
 #Region  Project Attributes 
	#ApplicationLabel: Smart Printer for Android
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
	#BridgeLogger: True
#End Region

#Region  Activity Attributes 
	#FullScreen: True
	#IncludeTitle: False
#End Region

Sub Process_Globals	
	Public translate As Translator
	Public localDefaultFontSize, intWorkMode As Int
	Public Const orientationLandscape As Int = 0
	Public Const orientationPortrait As Int = 1
	Public ScreenOrientation As Int = orientationPortrait		'1 - Portrait; 0 - Landscape
	Public localDefaultFontSize, intWorkMode As Int

	Public languageList As List
	Public Const lng_BG As String = "BG"		'Bulgarian Language Abbreviation
	Public Const lng_EN As String = "EN"		'English Language Abbreviation
	Public Const lng_RU As String = "RU"		'Russian Language Abbreviation
	Public Const lng_RO As String = "RO"		'Romanian Language Abbreviation
	Public Const lng_ES As String = "ES"		'Spanish Language Abbreviation
	Public Const lng_KA As String = "KA"		'Georgian Language Abbreviation
	Public Const lng_DE As String = "DE"		'German Language Abbreviation
	Public Const lng_KK As String = "KK"		'Kazakh Language Abbreviation
	Public Const lng_EL As String = "EL"		'Greek Language Abbreviation
	Public Const lng_Fi As String = "FI"		'Finish Language Abbreviation
	Public Const lng_UK As String = "UK"		'Ukranian Language Abbreviation
	Public Const lng_CZ As String = "CZ"		'Czech Language Abbreviation
	
	Public  SCREEN_ID As Int = 0	
	Public Const SCREEN_LOGIN As Int = 1						'Login Screen ID
	Public Const SCREEN_SETTINGS As Int = 2							'Login Screen ID
	Public Const SCREEN_STATUSPRINTER As Int = 5						'Login Screen ID
	
	
	Public SelectedLanguage As String = lng_BG
	Private Locale As AHLocale

	Public Math As B4XEval						'Used to calcualte string expressions

	Public Const PS_DeviceMAC As Int = 0
	Public Const PS_IPAddress As Int = 1
	Public Const PS_IPPort As Int = 2
	Public Const PS_SerialPort As Int = 3
	Public Const PS_BaudRate As Int = 4
	Public Const PS_UserID As Int = 5
	Public Const PS_Password As Int = 6
	
	Private req As String
	
	Public rp As RuntimePermissions
	Public SHAREDFolder As String	'This returns the safe dir now - replaces File.DirDefaultExternal
	
End Sub

Sub Globals
	Public loginScr As IPscreen
	Public PrinterStatusReference As PrinterStatusScreen
End Sub

Sub Activity_Create(FirstTime As Boolean)
	translate.Initialize
	
	languageList = translate.Get_LanguageList
	Countries.Initialize
	
	Math.Initialize(Me, "Math")
	
	If (APIVersion >= 23) Then
		rp.CheckAndRequest(rp.PERMISSION_WRITE_EXTERNAL_STORAGE)
		Wait For Activity_PermissionResult(Permission As String, Result As Boolean)
		If Not (Result) Then
			Msgbox(translate.GetString("lblWritePermission"), translate.GetString("lblWarning"))
			Activity.Finish
		End If
	End If

	SHAREDFolder = rp.GetSafeDirDefaultExternal("")	'This returns the safe dir now - replaces File.DirDefaultExternal
	ImageResources.LoadImages
	
	UConfig.LoadSavedUSConfig
	
	ProgramData.Initialize
	UISizes.Initialize
	Locale.Initialize
	
	
	loginScr.Initialize
	loginScr.setPanelToActivity
	loginScr.build_Screen
	
	Login_SignsRefresh
	SCREEN_ID = SCREEN_LOGIN
End Sub


Public Sub APIVersion As Int
	Dim r As Reflector
	Dim Api As Int
	Api = r.GetStaticField("android.os.Build$VERSION", "SDK_INT")
	Return Api
End Sub

Sub Activity_Resume
'	StartService(SPAservice)
End Sub

Sub Activity_Pause (UserClosed As Boolean)
'	StopService(SPAservice)
End Sub

Public Sub getRequest As String
	req = SPAservice.r
	Return req
End Sub

'Public Sub readytoPrint
'	CallSub(settingsScr, "POS_Print")
'End Sub

Public Sub Get_Activity As Activity

	Return Activity 
End Sub

private Sub sendOperation
		ProgramData.strLastOperation = OperationFunctions.ExportXML(ProgramData.LastOperations)

End Sub

Private Sub Print_Finished
	sendOperation
	ProgramData.partnerPhone = ""
End Sub

Public Sub Login_SignsRefresh 
	CallSub(loginScr, "refreshLogin_Labels")
End Sub

public Sub SetPrinterStatus_Reference (screen As PrinterStatusScreen )
	PrinterStatusReference = screen
End Sub

'метод,с който пренаписваме бутонът за връщане назад на у-вото
Sub Activity_KeyPress (KeyCode As Int) As Boolean
	If KeyCode = KeyCodes.KEYCODE_BACK Then
	
		Select SCREEN_ID
			Case SCREEN_LOGIN
				Private result As Int
				result = Msgbox2("Are you sure?", "Exit!", "Yes", "Cancel", "No", Null)
				If result = DialogResponse.POSITIVE Then
					StopService(SPAservice)
					ExitApplication
				End If
				Exit
			Case SCREEN_SETTINGS
				loginScr.goBackToLoginScreen
				UConfig.writeUSConfig
				Exit			
		End Select
	End If
	Return True
End Sub